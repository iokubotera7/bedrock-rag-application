AWSTemplateFormatVersion: 2010-09-09
Description: Template for Bedrock RAG Application

Resources:
  # Create VPC
  RagVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      InstanceTenancy: default
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: rag-test

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/24
      VpcId: !Ref RagVPC
      AvailabilityZone: !Select [ 0, !GetAZs ]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PublicSubnet1
  
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.2.0/24
      VpcId: !Ref RagVPC
      AvailabilityZone: !Select [ 0, !GetAZs ]
      Tags:
        - Key: Name
          Value: PrivateSubnet1

  # Create IGW
  RagVPCIGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: rag-test
  
  # Attach InternetGateway to RagVPC
  RagVPCIGWAttach:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref RagVPCIGW
      VpcId: !Ref RagVPC
  
  # Create RouteTable
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref RagVPC
      Tags:
        - Key: Name
          Value: Public Route

  
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: RagVPCIGW
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref RagVPCIGW

  
  PublicSubnet1Association:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  # DynamoDB
  BscDB:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: "bsc_db"
      # Item
      AttributeDefinitions:
        - AttributeName: "SessionId"
          AttributeType: "S"
      # PrimaryKey
      KeySchema:
        - AttributeName: "SessionId"
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: "1"
        WriteCapacityUnits: "1"

  # Create ECR Repository
  ECRRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: "bedrock-rag"
      ImageTagMutability: IMMUTABLE
      LifecyclePolicy:
        LifecyclePolicyText: >
          {
            "rules": [
              {
                "action": {
                  "type": "expire"
                },
                "selection": {
                  "countType": "imageCountMoreThan",
                  "countNumber": 10,
                  "tagStatus": "any"
                },
                "description": "delete old images more than 10 images",
                "rulePriority": 1
              }
            ]
          }
        RegistryId: !Ref AWS::AccountId
      Tags:
        - Key: Name
          Value: "bedrock-rag"
      